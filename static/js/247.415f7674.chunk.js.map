{"version":3,"file":"static/js/247.415f7674.chunk.js","mappings":"mTACMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,2FACzBC,EADyB,sCACuBH,GADvB,kBAExBI,EAAID,IAFoB,2CAAH,qDAKjBE,EAAe,mCAAG,WAAMC,GAAN,8EACvBC,EADuB,iBACED,EADF,oBACqBN,EADrB,qCAEtBI,EAAIG,IAFkB,2CAAH,sDAKfC,EAAe,mCAAG,WAAMF,GAAN,8EACvBG,EADuB,iBACEH,EADF,4BAC6BN,EAD7B,qCAEtBI,EAAIK,IAFkB,2CAAH,sDAKfC,EAAe,mCAAG,WAAMJ,GAAN,8EACvBK,EADuB,iBACEL,EADF,4BAC6BN,EAD7B,qCAEtBI,EAAIO,IAFkB,2CAAH,sDAKfC,EAAkB,mCAAG,WAAMC,GAAN,8EAC1BC,EAD0B,gCACiBd,EADjB,iCACiDa,EADjD,0CAEzBT,EAAIU,IAFqB,2CAAH,sDAKzBV,EAAG,mCAAG,WAAMW,GAAN,kGAEed,EAAAA,EAAAA,IAAUc,GAFzB,uBAEAC,EAFA,EAEAA,KAFA,kBAGDA,GAHC,gCAKRC,QAAQC,IAAR,qBAA0BH,EAA1B,oBACAE,QAAQC,IAAR,gBANQ,yDAAH,qD,sJCzBM,SAASC,IACtB,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOX,EAAP,KAAqBY,EAArB,KACQf,GAAYgB,EAAAA,EAAAA,MAAZhB,QAUR,OARAiB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,qGACahB,EAAAA,EAAAA,IAAgBF,GAD7B,OACRG,EADQ,OAEdY,EAAgBZ,EAAagB,MAFf,2CAAH,qDAIbD,GACD,GAAE,CAAClB,KAGF,yBACGG,GACC,wBACGA,EAAaiB,KAAI,SAAAD,GAAI,OACpB,0BACGA,EAAKE,eACJ,gBACEC,IAAG,yCAAoCH,EAAKE,cAC5CE,MAAO,IACPC,IAAKL,EAAKM,QAGd,uBAAIN,EAAKM,QACT,uCAAeN,EAAKO,eATbP,EAAKQ,GADM,OAexB,wEAIP,C","sources":["api-service.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'ed6f703d0e9f91008dbdcbc89334b381';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const trendingMovies = `/trending/movie/day?api_key=${API_KEY}`;\n  return get(trendingMovies);\n};\n\nexport const getMovieDetails = async movieId => {\n  const movieDetails = `/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n  return get(movieDetails);\n};\n\nexport const getMovieCredits = async movieId => {\n  const movieCredits = `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n  return get(movieCredits);\n};\n\nexport const getMovieReviews = async movieId => {\n  const moviesReview = `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`;\n  return get(moviesReview);\n};\n\nexport const getMoviesByKeyword = async keyword => {\n  const moviesByKeyword = `/search/movie?api_key=${API_KEY}&language=en-US&query=${keyword}&include_adult=false`;\n  return get(moviesByKeyword);\n};\n\nconst get = async query => {\n  try {\n    const { data } = await axios.get(query);\n    return data;\n  } catch (error) {\n    console.log(`Request to ${query} threw an error`);\n    console.log(`Error: `, error);\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n// import PropTypes from 'prop-types';\nimport { getMovieCredits } from 'api-service';\n\nexport default function Cast() {\n  const [movieCredits, setMovieCredits] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getData = async () => {\n      const movieCredits = await getMovieCredits(movieId);\n      setMovieCredits(movieCredits.cast);\n    };\n    getData();\n  }, [movieId]);\n\n  return (\n    <div>\n      {movieCredits ? (\n        <ul>\n          {movieCredits.map(cast => (\n            <li key={cast.id}>\n              {cast.profile_path && (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${cast.profile_path}`}\n                  width={200}\n                  alt={cast.name}\n                />\n              )}\n              <p>{cast.name}</p>\n              <p>Character: {cast.character}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any cast info for this movie.</p>\n      )}\n    </div>\n  );\n}\n"],"names":["API_KEY","axios","getTrendingMovies","trendingMovies","get","getMovieDetails","movieId","movieDetails","getMovieCredits","movieCredits","getMovieReviews","moviesReview","getMoviesByKeyword","keyword","moviesByKeyword","query","data","console","log","Cast","useState","setMovieCredits","useParams","useEffect","getData","cast","map","profile_path","src","width","alt","name","character","id"],"sourceRoot":""}