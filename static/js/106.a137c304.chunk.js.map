{"version":3,"file":"static/js/106.a137c304.chunk.js","mappings":"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","sources":["api-service.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'ed6f703d0e9f91008dbdcbc89334b381';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const trendingMovies = `/trending/movie/day?api_key=${API_KEY}`;\n  return get(trendingMovies);\n};\n\nexport const getMovieDetails = async movieId => {\n  const movieDetails = `/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n  return get(movieDetails);\n};\n\nexport const getMovieCredits = async movieId => {\n  const movieCredits = `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n  return get(movieCredits);\n};\n\nexport const getMovieReviews = async movieId => {\n  const moviesReview = `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`;\n  return get(moviesReview);\n};\n\nexport const getMoviesByKeyword = async keyword => {\n  const moviesByKeyword = `/search/movie?api_key=${API_KEY}&language=en-US&query=${keyword}&include_adult=true`;\n  return get(moviesByKeyword);\n};\n\nconst get = async query => {\n  try {\n    const { data } = await axios.get(query);\n    return data;\n  } catch (error) {\n    console.log(`Request to ${query} threw an error`);\n    console.log(`Error: `, error);\n  }\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieCardContainer = styled.div`\n  padding-top: 96px;\n`;\n\nexport const GoBackButton = styled(Link)`\n  display: flex;\n  width: 100px;\n  font-size: 18px;\n  font-weight: 600;\n  color: #000;\n  text-decoration: none;\n  padding: 5px 15px;\n  margin-bottom: 24px;\n  border: 1px solid black;\n  border-radius: 8px;\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    color: orange;\n    border-color: orange;\n  }\n`;\n\nexport const MovieCard = styled.div`\n  display: flex;\n  border-bottom: 1px solid grey;\n`;\n\nexport const MovieCardInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const MoviePoster = styled.img`\n  width: 240px;\n  display: flex;\n  margin-right: 24px;\n`;\n\nexport const MovieTitle = styled.h1`\n  margin-bottom: 24px;\n`;\n\nexport const UserScore = styled.p`\n  margin-bottom: 24px;\n`;\n\nexport const OverviewTitle = styled.h2`\n  margin-bottom: 24px;\n`;\n\nexport const Overview = styled.p`\n  margin-bottom: 24px;\n`;\n\nexport const GenresTitle = styled.h3`\n  margin-bottom: 24px;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n`;\n\nexport const Genre = styled.li`\n  &:not(:last-child) {\n    margin-right: 18px;\n  }\n`;\n\nexport const AdditionalInfo = styled.div`\n  border-bottom: 1px solid grey;\n`;\n","import React, { useEffect, useState, useRef, Suspense } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { ThreeDots } from 'react-loader-spinner';\n// import PropTypes from 'prop-types';\nimport { getMovieDetails } from 'api-service';\nimport {\n  MovieCardContainer,\n  GoBackButton,\n  MovieCard,\n  MovieCardInfo,\n  MoviePoster,\n  MovieTitle,\n  UserScore,\n  OverviewTitle,\n  Overview,\n  GenresTitle,\n  GenresList,\n  Genre,\n  AdditionalInfo,\n} from './MovieDetails.styled';\n\nexport const MovieDetails = () => {\n  const [movieCard, setMovieCard] = useState({});\n  const [releaseYear, setReleaseYear] = useState('');\n  const { movieId } = useParams();\n  const { state } = useLocation();\n  const backLinkHref = useRef(state?.from ?? '/');\n  const userScore = Math.round(Number(movieCard.vote_average * 10));\n\n  useEffect(() => {\n    const getData = async () => {\n      const movie = await getMovieDetails(movieId);\n      setMovieCard(movie);\n    };\n    getData();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (movieCard.release_date) {\n      setReleaseYear(movieCard.release_date.split('-')[0]);\n    }\n  }, [movieCard]);\n\n  return (\n    <>\n      <MovieCardContainer>\n        <GoBackButton to={backLinkHref.current}>&#x2190; Go back</GoBackButton>\n        <MovieCard>\n          {movieCard.poster_path && (\n            <MoviePoster\n              src={`https://image.tmdb.org/t/p/w500${movieCard.poster_path}`}\n              alt={movieCard.title}\n            />\n          )}\n          <MovieCardInfo>\n            <MovieTitle>\n              {movieCard.title} ({releaseYear})\n            </MovieTitle>\n            <UserScore>User Score: {userScore}%</UserScore>\n            <OverviewTitle>Overview</OverviewTitle>\n            <Overview>{movieCard.overview}</Overview>\n            <GenresTitle>Genres</GenresTitle>\n            {movieCard.genres ? (\n              <GenresList>\n                {movieCard.genres.map(({ name }) => (\n                  <Genre key={name}>{name}</Genre>\n                ))}\n              </GenresList>\n            ) : (\n              <p>No data about genres</p>\n            )}\n          </MovieCardInfo>\n        </MovieCard>\n      </MovieCardContainer>\n      <AdditionalInfo>\n        <h4>Additional information</h4>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </AdditionalInfo>\n      <Suspense\n        fallback={\n          <ThreeDots\n            height=\"80\"\n            width=\"80\"\n            radius=\"9\"\n            color=\"orange\"\n            ariaLabel=\"three-dots-loading\"\n          />\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n","import { MovieDetails } from 'components/MovieDetails/MovieDetails';\n\nexport default function MovieDetailsPage() {\n  return <MovieDetails></MovieDetails>;\n}\n"],"names":["API_KEY","axios","getTrendingMovies","trendingMovies","get","getMovieDetails","movieId","movieDetails","getMovieCredits","movieCredits","getMovieReviews","moviesReview","getMoviesByKeyword","keyword","moviesByKeyword","query","data","console","log","MovieCardContainer","styled","GoBackButton","Link","MovieCard","MovieCardInfo","MoviePoster","MovieTitle","UserScore","OverviewTitle","Overview","GenresTitle","GenresList","Genre","AdditionalInfo","MovieDetails","useState","movieCard","setMovieCard","releaseYear","setReleaseYear","useParams","state","useLocation","backLinkHref","useRef","from","userScore","Math","round","Number","vote_average","useEffect","getData","movie","release_date","split","to","current","poster_path","src","alt","title","overview","genres","map","name","Suspense","fallback","height","width","radius","color","ariaLabel","MovieDetailsPage"],"sourceRoot":""}