{"version":3,"file":"static/js/186.97a17fdb.chunk.js","mappings":"mTACMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,2FACzBC,EADyB,sCACuBH,GADvB,kBAExBI,EAAID,IAFoB,2CAAH,qDAKjBE,EAAe,mCAAG,WAAMC,GAAN,8EACvBC,EADuB,iBACED,EADF,oBACqBN,EADrB,qCAEtBI,EAAIG,IAFkB,2CAAH,sDAKfC,EAAe,mCAAG,WAAMF,GAAN,8EACvBG,EADuB,iBACEH,EADF,4BAC6BN,EAD7B,qCAEtBI,EAAIK,IAFkB,2CAAH,sDAKfC,EAAe,mCAAG,WAAMJ,GAAN,8EACvBK,EADuB,iBACEL,EADF,4BAC6BN,EAD7B,qCAEtBI,EAAIO,IAFkB,2CAAH,sDAKfC,EAAkB,mCAAG,WAAMC,GAAN,8EAC1BC,EAD0B,gCACiBd,EADjB,iCACiDa,EADjD,yCAEzBT,EAAIU,IAFqB,2CAAH,sDAKzBV,EAAG,mCAAG,WAAMW,GAAN,kGAEed,EAAAA,EAAAA,IAAUc,GAFzB,uBAEAC,EAFA,EAEAA,KAFA,kBAGDA,GAHC,gCAKRC,QAAQC,IAAR,qBAA0BH,EAA1B,oBACAE,QAAQC,IAAR,gBANQ,yDAAH,qD,qJCzBM,SAASC,IACtB,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQhB,GAAYiB,EAAAA,EAAAA,MAAZjB,QAUR,OARAkB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,qGACaf,EAAAA,EAAAA,IAAgBJ,GAD7B,OACRe,EADQ,OAEdC,EAAgBD,EAAaK,SAFf,2CAAH,qDAIbD,GACD,GAAE,CAACnB,KAGF,yBACGe,EAAaM,QACZ,wBACGN,EAAaO,KAAI,SAAAC,GAAM,OACtB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADM,OAQ1B,sEAIP,C","sources":["api-service.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'ed6f703d0e9f91008dbdcbc89334b381';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const trendingMovies = `/trending/movie/day?api_key=${API_KEY}`;\n  return get(trendingMovies);\n};\n\nexport const getMovieDetails = async movieId => {\n  const movieDetails = `/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n  return get(movieDetails);\n};\n\nexport const getMovieCredits = async movieId => {\n  const movieCredits = `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n  return get(movieCredits);\n};\n\nexport const getMovieReviews = async movieId => {\n  const moviesReview = `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`;\n  return get(moviesReview);\n};\n\nexport const getMoviesByKeyword = async keyword => {\n  const moviesByKeyword = `/search/movie?api_key=${API_KEY}&language=en-US&query=${keyword}&include_adult=true`;\n  return get(moviesByKeyword);\n};\n\nconst get = async query => {\n  try {\n    const { data } = await axios.get(query);\n    return data;\n  } catch (error) {\n    console.log(`Request to ${query} threw an error`);\n    console.log(`Error: `, error);\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n// import PropTypes from 'prop-types';\nimport { getMovieReviews } from 'api-service';\n\nexport default function Reviews() {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getData = async () => {\n      const movieReviews = await getMovieReviews(movieId);\n      setMovieReviews(movieReviews.results);\n    };\n    getData();\n  }, [movieId]);\n\n  return (\n    <div>\n      {movieReviews.length ? (\n        <ul>\n          {movieReviews.map(review => (\n            <li key={review.id}>\n              <h4>Author: {review.author}</h4>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </div>\n  );\n}\n"],"names":["API_KEY","axios","getTrendingMovies","trendingMovies","get","getMovieDetails","movieId","movieDetails","getMovieCredits","movieCredits","getMovieReviews","moviesReview","getMoviesByKeyword","keyword","moviesByKeyword","query","data","console","log","Reviews","useState","movieReviews","setMovieReviews","useParams","useEffect","getData","results","length","map","review","author","content","id"],"sourceRoot":""}